{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "ME212 Course Project.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyMUOGpdHfH93sn4KwoFNtDw",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Nishtha131201/ME-212-Course-project/blob/main/ME212_Course_Project.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I3xAFtSnp-sC"
      },
      "source": [
        "#Importing the libraries\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7kWw1T8HqJDK",
        "outputId": "1f2d4eea-2562-4c58-b954-3570d54b17b2"
      },
      "source": [
        "#Taking input from the user\n",
        "P = int(input(\"Enter the value of the load acting on the beam in N: \"))\n",
        "L= int(input(\"Enter the value of length of the beam: \"))\n",
        "a=int(input(\"Enter the value of distance at which the load is acting: \"))"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter the value of the load acting on the beam in N: 500\n",
            "Enter the value of length of the beam: 20\n",
            "Enter the value of distance at which the load is acting: 3\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FTfIacdrrZiA",
        "outputId": "42dffbad-f04f-48e3-e5d6-b117179307cb"
      },
      "source": [
        "#Calculating Ra and Rb from the given formula\n",
        "R1=P*(L-a)/L\n",
        "R2=P*a/L\n",
        "print(R1,\"N\",R2,\"N\")"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "425.0 N 75.0 N\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q97tKePFrr6E"
      },
      "source": [
        "#Intializing 100 distinct points from 0 to L.\n",
        "l=np.linspace(0,L,100) \n"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SL8zG6lNrxq2"
      },
      "source": [
        "X=[]\n",
        "SF=[]\n",
        "BM=[]"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MZuMtbD1r7Kk"
      },
      "source": [
        "#Specifying the conditions to plot the SFD and BMD\n",
        "for x in l:\n",
        "  if x <= a:\n",
        "    m = R1*x\n",
        "    sf = R1\n",
        "  elif x > a:\n",
        "    m=(R1*x)-(P*(x-a))\n",
        "    sf = R1-P\n",
        "\n",
        "  BM.append(m)\n",
        "  X.append(x)\n",
        "  SF.append(sf)"
      ],
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 177
        },
        "id": "f6V29qt_ztHn",
        "outputId": "1e61609e-f932-4982-b065-b8a71bd130a0"
      },
      "source": [
        "plt.subplot(2,1,1)\n",
        "plt.plot(X,BM,color='g')\n",
        "plt.plot([0,L],[0,0],color='r')\n",
        "plt.title(\"Bending Moment Diagram\")\n",
        "plt.xlabel(\"Length in m\")\n",
        "plt.ylabel(\"Bending Moment in Nm\")\n",
        "plt.show()"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 177
        },
        "id": "ocuQ6S2T1csP",
        "outputId": "5fd984c1-cb6c-494b-e4e2-9648cae09941"
      },
      "source": [
        "plt.subplot(2,1,2)\n",
        "plt.plot(X,SF,color='g')\n",
        "plt.plot([0,L],[0,0],color='r')\n",
        "plt.plot([0,0],[0,R1],[L,L],[0,-R2], color='r')\n",
        "plt.title(\"Shear Force Diagram\")\n",
        "plt.xlabel(\"Length in m\")\n",
        "plt.ylabel(\"Shear Force in N\")\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
